//Remove browsers default margin and padding
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit; 
  scrollbar-width: none;  //Remove scroll bar  
}

//Remove scroll bar for cleaner design
::-webkit-scrollbar {
  width: 0;  /* Remove scrollbar space */
  background: transparent;  /* Optional: just make scrollbar invisible */
}

html { 
  // Set up for rem use -  10px/16px = 62.5%
  font-size: 62.5%; //  1 rem = 10px
 
  //responsive design queries for REM sizes
 @include query(max-w-1200) {
   font-size: 56.25%  // 1rem = 9px - 9/16 = 56.25%
 }

   @include query(max-w-900) {
     font-size: 60%  // 1 rem = 8px - 8/16 = 50%
   }

   @include query(max-w-400) {
     font-size: 50%;
   }



 
}


body {
  //On an element, padding and border are included in the width and height, making it easier to calculate sizes
  box-sizing: border-box;
  
}


input, input:focus, textarea:focus, select:focus{
  outline: none;
}

button {
  background: none;
  outline: none;
  border: none;
  cursor: pointer;
}


.generalSectionGrey {
  width: 100vw;
  @extend %flexCenter;
  background-color: $grey;  
  
  &__container {
    width: 75%;
    margin: 8rem 0;

    @include query(max-w-1000){
      justify-content: flex-start;
      align-items: flex-start;
      width: 80%;
    }

    @include query(max-w-850) {
      width: 85%;
    } 
  }
}

.generalSectionWhite {
  width: 100vw;
  @extend %flexCenter;
  background-color: $white;  
  
  &__container {
    width: 75%;
    margin: 8rem 0;

    @include query(max-w-1000){
      justify-content: flex-start;
      align-items: flex-start;
      width: 80%;
    }

    @include query(max-w-850) {
      width: 85%;
    } 
  }
}

.mainInputText {
  width: 100%;
  height: 5.6rem;
  padding: 1rem;
  border: 1px solid #dddddd;
  border-radius: $border-radius;
  background-color: rgba($dark-grey, .05);
  transition: all .2s;
  font-size: 1.6rem;
  margin: 1rem 0;


  &::placeholder {
    color: rgba($dark-grey, 0.75);
    font-size: 1.6rem;
    font-weight: 300; 
  } 

  &:focus {
    border:1px solid $green; 
  }

  &:focus::placeholder {
    color: $black;
  }

  &:disabled {
    opacity: .2;
  }
}

select {
  // appearance: none;
  background-color: transparent;
  font-family: inherit;
  font-size: inherit;
  cursor: inherit;
  line-height: inherit;
  z-index: 1;
  color: rgba($dark-grey, 0.75);
  outline: none;

  &::-ms-expand {
    display: none;
  }

}

.select {
  display: grid;
  grid-template-areas: "select";
  align-items: center;
  position: relative;

  select,
  &::after {
    grid-area: select;
  }
  cursor: pointer;
  line-height: 1.1;

  border-radius: $border-radius;

  background-color: #fff;
  background-image: rgba($dark-grey, .05);

  // Custom arrow
  &:not(.select--multiple)::after {
    content: "";
    justify-self: end;
    width: 0.8em;
    height: 0.5em;
    background-color: #000;
    clip-path: polygon(100% 0%, 0 0%, 50% 100%);

  }
}

// Interim solution until :focus-within has better support
select:focus + .focus {
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border: 2px solid var(--select-focus);
  
}

select[multiple] {
  padding-right: 0;
  height: 6rem;
  
  option {
    white-space: normal;
    cursor: pointer;
    border-radius: $border-radius;
    border: 1px solid $green;
    // Only affects Chrome
    outline-color: $green;
  }

 }

.select--disabled {
  cursor: not-allowed;
  background-color: #eee;
  background-image: linear-gradient(to top, #ddd, #eee 33%);
}


select:focus {
  color: #000;
}

input[type="date"] {
  width: 100%;
}


.checkboxContainer {
  display: block;
  position: relative;
  padding-left: 3.5rem;
 
  cursor: pointer;
  font-size: 1.4rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.checkboxContainer input {
  position: absolute;
  cursor: pointer;
  opacity: 0;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: rgba($dark-grey, .05);
  border-radius: 4px;
  border: 1px solid #ddd
}

/* On mouse-over, add a grey background color */
.checkboxContainer:hover input ~ .checkmark {
  background-color: rgba($dark-grey, .15);
}

/* When the checkbox is checked, add a blue background */
.checkboxContainer input:checked ~ .checkmark {
  background-color: #00AAAA;
  border: 1px solid #00AAAA

}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.checkboxContainer input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.checkboxContainer .checkmark:after {
  left: 9px;
  top: 4px;
  width: 7px;
  height: 13px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

textarea {
  width: 100%;
  height: 15.6rem;
  padding: 1rem;
  border: 1px solid #dddddd;
  background-color: rgba($dark-grey, .05);
  transition: all .2s;
  font-size: 1.6rem; 
  border-radius: $border-radius;
  resize: none;
  font-family: $main-font;

  @include query(max-w-600){
    font-size: 1.4rem;
  }

  &::placeholder {
    color: rgba($dark-grey, 0.75);
    font-size: 1.6rem;
    font-weight: 400;
    

    @include query(max-w-600){
      font-size: 1.4rem;
    }
  } 

  &:focus {
    border:1px solid $green; 
  }

  &:focus::placeholder {
    color: $black;
  }

  &:disabled {
    opacity: .2;
  }
}



